1) What happens when you initialize a repository? Why do you need to do it?

THis creates the .git directory which tells git that this directory contains a repository.  This does not add any files to the repository, but preps the repository for files to be added to it.

2) How is the staging area different from the working directory and the repository? What value do you think it offers?

The staging area contains the changes to the working directory that will be committed to the repository.  It provides an intermediate area that gives the user the ability to re-check that they are committing the files they want to and not committing those that they do not want to commit.

3) How can you use the staging area to make sure you have one commit per logical change?

Using "git diff --staged," I can view all of the changes in teh staging area and make sure that each of the changes is towards one logical change.

4) What are some situations when branches would be helpful in keeping your history organized? How would branches help?

Branches can be useful when trying out something new, adding a feature, etc.  Basically, any situation that I would want to be able to track changes in, but may not want each of those commits on the master branch.

5) How do the diagrams help you visualize the branch structure?

The diagrams help to show exactly where branches diverge, finding the last common commit that was shared between two or more branches

6) What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

This merges the changes made between two separate branches. We represent it on the diagram as we do so as to show that there are multiple parents to the final commit and to show the full history that led to the merged commit.
